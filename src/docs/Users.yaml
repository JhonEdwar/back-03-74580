paths:
  /api/users:
    get:
      summary: Obtiene todos los usuarios
      tags:
        - Users
      responses:
        "200":
          description: Lista de usuarios
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        "500":
          description: Error interno del servidor

  /api/users/{uid}:
    get:
      summary: Obtiene un usuario específico
      tags:
        - Users
      parameters:
        - name: uid
          in: path
          required: true
          description: ID del usuario
          schema:
            type: string
      responses:
        "200":
          description: Usuario encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        "404":
          description: Usuario no encontrado
        "500":
          description: Error interno del servidor

    put:
      summary: Actualiza un usuario existente
      tags:
        - Users
      parameters:
        - name: uid
          in: path
          required: true
          description: ID del usuario a actualizar
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/requestBodies/updateUser'
      responses:
        "200":
          description: Usuario actualizado
        "400":
          description: Datos inválidos
        "500":
          description: Error interno del servidor

    delete:
      summary: Elimina un usuario
      tags:
        - Users
      parameters:
        - name: uid
          in: path
          required: true
          description: ID del usuario a eliminar
          schema:
            type: string
      responses:
        "200":
          description: Usuario eliminado
        "404":
          description: Usuario no encontrado
        "500":
          description: Error interno del servidor
  
  /api/sessions/register:
    post:
      summary: Registra un nuevo usuario
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/requestBodies/registerUser'
      responses:
        "201":
          description: Usuario registrado correctamente
        "400":
          description: Datos inválidos
        "500":
          description: Error interno del servidor


components:
  schemas:
    User:
      type: object
      properties:
        _id:
          type: string
          description: ID del usuario
        first_name:
          type: string
          description: Nombre del usuario
        last_name:
          type: string
          description: Apellido del usuario
        email:
          type: string
          description: Correo electrónico
        password:
          type: string
          description: Contraseña
        role:
          type: string
          description: Rol del usuario (por defecto "user")
        pets:
          type: array
          description: Lista de mascotas del usuario
          items:
            type: object
            properties:
              _id:
                type: string
                description: ID de la mascota (referencia)
      example:
        _id: "6623213abc234def45678901"
        first_name: Jhon  
        last_name: Obando
        email: john.Obando@mail.com
        password: micontraseña
        role: user
        pets:
          - _id: "662abc456def123456789012"

  requestBodies:
    updateUser:
      type: object
      properties:
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
        password:
          type: string
        role:
          type: string
        pets:
          type: array
          items:
            type: object
            properties:
              _id:
                type: string
      example:
        first_name: Alexander  
    registerUser:
      type: object
      required:
        - first_name
        - last_name
        - email
        - password
      properties:
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
        password:
          type: string
      example:
        first_name: Ana
        last_name: Gómez
        email: ana.gomez@mail.com
        password: claveSegura123
